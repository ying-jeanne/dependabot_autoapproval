name: Dependabot reviewer

on: pull_request_target

permissions:
  pull-requests: write
  contents: write

jobs:
  review-dependabot-pr:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}

    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v1.3.1

      - name: Check if PR is from a whitelisted library
        id: whitelist-check
        run: |
          whitelisted_libraries=(
              "github.com/google/go-cmp:I like this library"
              "github.com/xorm:I love this library too"
          )
          pr_title=$(jq --raw-output .pull_request.title "$GITHUB_EVENT_PATH")
          is_whitelisted=false
          whitelist_reason=""
          for library_reason in "${whitelisted_libraries[@]}"; do
            library=$(echo "$library_reason" | cut -d ':' -f 1)
            reason=$(echo "$library_reason" | cut -d ':' -f 2)
            if [[ $pr_title == *"$library"* ]]; then
              is_whitelisted=true
              whitelist_reason=$reason
              break
            fi
          done
          echo "::set-output name=whitelisted::$is_whitelisted"
          echo "::set-output name=reason::$whitelist_reason"          
      ##
      # - name: Enable auto-merge for Dependabot PRs
      #   run: gh pr merge --auto --merge "$PR_URL"
      #   env:
      #     PR_URL: ${{github.event.pull_request.html_url}}
      #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Approve patch and minor updates
        if: ${{steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch' || steps.dependabot-metadata.outputs.update-type == 'version-update:semver-minor'}}
        run: gh pr review $PR_URL --approve -b "I'm **approving** this pull request because **it includes a patch or minor update**"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}


      # - name: Comment on major updates of non-development dependencies
      #   if: ${{steps.dependabot-metadata.outputs.update-type == 'version-update:semver-major'}}
      #   run: |
      #     gh pr comment $PR_URL --body "I'm **not approving** this PR because **it includes a major update of a dependency used in production**"
      #     gh pr edit $PR_URL --add-label "requires-manual-review"
      #   env:
      #     PR_URL: ${{github.event.pull_request.html_url}}
      #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}