# Auto-merge as documented in official Github docs
# https://docs.github.com/en/code-security/dependabot/working-with-dependabot/automating-dependabot-with-github-actions

name: Auto-merge Dependabot PRs
on: pull_request

permissions:
  pull-requests: write
  contents: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      # - name: Dependabot metadata
      #   id: metadata
      #   uses: dependabot/fetch-metadata@v1.5.1
      #   with:
      #     github-token: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Define automerge strategy
        id: automerge-strategy
        run: | 
          minorWhitelist=[
            {"name": "github.com/aws/aws-sdk-go", "reason": "no issue since"}
          ]

          patchWhitelist=[
            {"name": "github.com/xlab/treeprint", "reason": "only used by test"}
          ]

          minorlist = toJson(minorWhitelist.*.name)
          patchlist = toJson(patchWhitelist.*.name)

          # Store the JSON data in the output variable
          echo "minorlist=$minorlist" >> $GITHUB_ENV
          echo "patchlist=$patchlist" >> $GITHUB_ENV

      - name: Approve and auto-merge
        run: |
          echo $patchlist
          echo $minorlist
        env: 
          patchlist: ${{ env.patchlist }}
          minorlist: ${{ env.minorlist }}
      #   # We 
      #   if: |
      #     (
      #       (
      #         contains(fromJson('[
      #           "alpine", 
      #           "golang",
      #           "gorm.io/driver/sqlite",
      #           "github.com/anchore/grype",
      #           "github.com/aquasecurity/trivy",
      #           "github.com/aws/aws-sdk-go-v2/config",
      #           "github.com/bmatcuk/doublestar/v4",
      #           "github.com/caarlos0/env/v6",
      #           "github.com/prometheus/client_golang",
      #           "github.com/sirupsen/logrus",
      #           "github.com/slack-go/slack",
      #           "github.com/urfave/cli",
      #           "github.com/urfave/cli/v2",
      #           "k8s.io/api",
      #           "k8s.io/apimachinery",
      #           "k8s.io/client-go",
      #           "Sonia-corporation/stale"
      #         ]'), steps.metadata.outputs.dependency-names)
      #       )
      #       && steps.metadata.outputs.update-type == 'version-update:semver-patch'
      #     )
      #     ||
      #     (
      #       (
      #         contains(fromJson('[
      #           "google.golang.org/api"
      #         ]'), steps.metadata.outputs.dependency-names)
      #       )
      #       && steps.metadata.outputs.update-type == 'version-update:semver-minor'
      #     )
      #     ||
      #     (
      #       contains(fromJson('[
      #         "github.com/stretchr/testify",
      #         "google/cloud-sdk"
      #       ]'), steps.metadata.outputs.dependency-names)
      #     )
      #   # Keep the "enable auto-merge" -> approve order.
      #   # If auto-merge is already enabled, approving will trigger the merge and the job will fail trying to enable auto-merge.
      #   run: |
      #     gh pr merge --auto --squash "$PR_URL"
      #     gh pr review --approve "$PR_URL"
      #   env:
      #     PR_URL: ${{github.event.pull_request.html_url}}
      #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}